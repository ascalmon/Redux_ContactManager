{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Users/antoniocalmon/Desktop/Developer/contactmanager_redux/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Users/antoniocalmon/Desktop/Developer/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { GET_CONTACTS } from './types';\nimport { DELETE_CONTACT } from './types';\nimport { ADD_CONTACT } from './types';\nimport axios from 'axios';\nexport var getContacts = function getContacts() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios;\n\n              case 2:\n                res = _context.sent;\n                dispatch({\n                  type: GET_CONTACTS\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteContact = function deleteContact(id) {\n  return {\n    type: DELETE_CONTACT,\n    payload: id\n  };\n};\nexport var addContact = function addContact(contact) {\n  return {\n    type: ADD_CONTACT,\n    payload: contact\n  };\n};","map":{"version":3,"sources":["/Users/Users/antoniocalmon/Desktop/Developer/contactmanager_redux/src/actions/contactActions.js"],"names":["GET_CONTACTS","DELETE_CONTACT","ADD_CONTACT","axios","getContacts","dispatch","res","type","deleteContact","id","payload","addContact","contact"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,SAA7B;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACbF,KADa;;AAAA;AACzBG,gBAAAA,GADyB;AAE/BD,gBAAAA,QAAQ,CAAE;AACRE,kBAAAA,IAAI,EAAEP;AADE,iBAAF,CAAR;;AAF+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAOP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAQ;AACnC,SAAO;AACLF,IAAAA,IAAI,EAAEN,cADD;AAELS,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAa;AACrC,SAAO;AACLL,IAAAA,IAAI,EAAEL,WADD;AAELQ,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { GET_CONTACTS } from './types';\nimport { DELETE_CONTACT } from './types';\nimport { ADD_CONTACT } from './types';\nimport axios from 'axios';\n\nexport const getContacts = () => async dispatch => {\n  const res = await axios\n  dispatch ({\n    type: GET_CONTACTS\n  });\n};\n\nexport const deleteContact = (id) => {\n  return {\n    type: DELETE_CONTACT,\n    payload: id\n  };\n};\n\nexport const addContact = (contact) => {\n  return {\n    type: ADD_CONTACT,\n    payload: contact\n  };\n};\n"]},"metadata":{},"sourceType":"module"}