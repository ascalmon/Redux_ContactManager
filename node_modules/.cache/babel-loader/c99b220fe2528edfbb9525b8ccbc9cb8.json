{"ast":null,"code":"import _defineProperty from \"/Users/Users/antoniocalmon/Desktop/Developer/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Users/antoniocalmon/Desktop/Developer/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Users/antoniocalmon/Desktop/Developer/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Users/antoniocalmon/Desktop/Developer/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Users/antoniocalmon/Desktop/Developer/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Users/antoniocalmon/Desktop/Developer/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Users/antoniocalmon/Desktop/Developer/contactmanager_redux/src/components/contacts/AddContact.js\";\nimport React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../actions/contactActions'; //import uuid from 'uuid';\n\nvar AddContact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddContact, _Component);\n\n  function AddContact() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddContact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddContact)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          phone = _this$state.phone; // Check For Errors\n\n      if (name === '') {\n        _this.setState({\n          errors: {\n            name: 'Name is required'\n          }\n        });\n\n        return;\n      }\n\n      if (email === '') {\n        _this.setState({\n          errors: {\n            email: 'Email is required'\n          }\n        });\n\n        return;\n      }\n\n      if (phone === '') {\n        _this.setState({\n          errors: {\n            phone: 'Phone is required'\n          }\n        });\n\n        return;\n      }\n\n      var newContact = {\n        //id: uuid(),    // Created due to the lack of a backend to provide a real id.\n        name: name,\n        email: email,\n        phone: phone\n      }; //// SUBMIT CONTACT ////\n\n      _this.props.addContact(newContact); // Clear State\n\n\n      _this.setState({\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n      });\n\n      _this.props.history.push('/');\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(AddContact, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          phone = _this$state2.phone,\n          errors = _this$state2.errors;\n      return React.createElement(\"div\", {\n        className: \"card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Add Contact\"), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(TextInputGroup, {\n        label: \"Name\",\n        name: \"name\",\n        placeholder: \"Enter Name\",\n        value: name,\n        onChange: this.onChange,\n        error: errors.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        value: email,\n        onChange: this.onChange,\n        error: errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        label: \"Phone\",\n        name: \"phone\",\n        placeholder: \"Enter Phone\",\n        value: phone,\n        onChange: this.onChange,\n        error: errors.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Add Contact\",\n        className: \"btn btn-light btn-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AddContact;\n}(Component);\n\nAddContact.propTypes = {\n  addContact: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addContact: addContact\n})(AddContact);","map":{"version":3,"sources":["/Users/Users/antoniocalmon/Desktop/Developer/contactmanager_redux/src/components/contacts/AddContact.js"],"names":["React","Component","TextInputGroup","PropTypes","connect","addContact","AddContact","state","name","email","phone","errors","onSubmit","e","preventDefault","setState","newContact","props","history","push","onChange","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../actions/contactActions';\n//import uuid from 'uuid';\n\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      //id: uuid(),    // Created due to the lack of a backend to provide a real id.\n      name,\n      email,\n      phone\n    };\n\n    //// SUBMIT CONTACT ////\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  addContact: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addContact })(AddContact);\n"]},"metadata":{},"sourceType":"module"}